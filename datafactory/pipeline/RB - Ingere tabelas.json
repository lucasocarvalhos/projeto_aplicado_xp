{
	"name": "RB - Ingere tabelas",
	"properties": {
		"activities": [
			{
				"name": "FCH - Itera sobre tabelas",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "FLT - Filtra tabelas",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('FLT - Filtra tabelas').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"batchCount": 10,
					"activities": [
						{
							"name": "COPY - Ingere dados",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "HttpReadSettings",
										"requestMethod": "GET",
										"requestTimeout": ""
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_http_csv",
									"type": "DatasetReference",
									"parameters": {
										"p_tabela": {
											"value": "@concat(\n    last(\n        split(item().chave_entidade, '.')\n    ),\n    '.csv'\n)",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_adls_parquet",
									"type": "DatasetReference",
									"parameters": {
										"p_sistema": {
											"value": "@first(split(item().chave_entidade, '.'))",
											"type": "Expression"
										},
										"p_container": "raw",
										"p_tabela": {
											"value": "@last(split(item().chave_entidade, '.'))",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "NTB - Executa bronze",
							"type": "DatabricksNotebook",
							"dependsOn": [
								{
									"activity": "COPY - Ingere dados",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/Workspace/Users/lucasocarvalho@outlook.com/databricks/databricks/delta/bronze/curinga_bronze",
								"baseParameters": {
									"p_arquivo": {
										"value": "@concat(\n    first(split(item().chave_entidade, '.')),\n    '/',\n    formatDateTime(addHours(utcNow(), -3), 'yyyy/MM/dd'),\n    '/',\n    last(split(item().chave_entidade, '.')),\n    '_',\n    formatDateTime(addHours(utcNow(), -3), 'yyyyMMdd'),\n    '.parquet'\n)",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_databricks",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "FLT - Filtra tabelas",
				"type": "Filter",
				"state": "Active",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.p_tabelas",
						"type": "Expression"
					},
					"condition": {
						"value": "@or(\n  or(\n    empty(pipeline().parameters.p_rb_sistema_tabela),\n    equals(pipeline().parameters.p_rb_sistema_tabela, '.')\n  ),\n  contains(\n    string(pipeline().parameters.p_rb_sistema_tabela),\n    item().chave_entidade\n  )\n)\n",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"p_tabelas": {
				"type": "array"
			},
			"p_rb_sistema_tabela": {
				"type": "object"
			}
		},
		"folder": {
			"name": "1. Raw-Bronze/Sistema Logosofico"
		},
		"annotations": []
	}
}